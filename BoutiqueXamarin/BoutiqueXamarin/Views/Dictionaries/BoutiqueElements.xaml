<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:controls="clr-namespace:BoutiqueXamarin.Controls;assembly=BoutiqueXamarin"
                    xmlns:svg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
                    xmlns:xct="http://xamarin.com/schemas/2020/toolkit">
    <Style TargetType="{x:Type Label}"
           BaseResourceKey="BodyStyle">
        <Setter Property="TextColor" Value="{StaticResource ColorAccent}" />
    </Style>

    <Style x:Key="LabelTitle"
           TargetType="{x:Type Label}">
        <Setter Property="FontAttributes" Value="Bold"/>
        <Setter Property="VerticalTextAlignment" Value="Center"/>
        <Setter Property="TextTransform" Value="Uppercase"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="TextColor" Value="{StaticResource ColorAccent}"/>
    </Style>

    <Style x:Key="LabelDescription"
           TargetType="{x:Type Label}"
           BasedOn="{StaticResource LabelTitle}">
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style TargetType="{x:Type Grid}" >
        <Setter Property="RowSpacing" Value="0" />
    </Style>

    <Style TargetType="{x:Type StackLayout}" >
        <Setter Property="Spacing" Value="0" />
    </Style>

    <Style x:Key="StackLayoutText" 
           TargetType="{x:Type StackLayout}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Spacing" Value="5" />
    </Style>

    <Style x:Key="ListViewDefault" 
           TargetType="{x:Type ListView}" >
        <Setter Property="SeparatorVisibility" Value="None" />
    </Style>

    <Style x:Key="ListViewUnevenDefault" 
           TargetType="{x:Type ListView}" 
           BasedOn="{StaticResource ListViewDefault}">
        <Setter Property="HasUnevenRows" Value="True" />
    </Style>

    <Style x:Key="SeparatorBox" 
           TargetType="{x:Type BoxView}">
        <Setter Property="HeightRequest" Value="1" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="BackgroundColor" Value="{StaticResource ColorPrimary}" />
    </Style>

    <Style x:Key="ButtonTransparent" 
           TargetType="{x:Type Button}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="FontSize" Value="18" />
    </Style>

    <Style x:Key="ButtonGlyph" 
           TargetType="{x:Type controls:ImageButtonGlyph}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Padding" Value="10, 5, 10, 5" />
        <Setter Property="GlyphFontFamily" Value="{OnPlatform iOS=Ionicons, Android=ionicons.ttf#}" />
        <Setter Property="GlyphColor" Value="{StaticResource ColorAccent}" />
        <Setter Property="GlyphSize" Value="32" />
    </Style>

    <Style x:Key="SvgImage"
           TargetType="{x:Type svg:SvgCachedImage}">
        <Setter Property="WidthRequest" Value="24" />
        <Setter Property="HeightRequest" Value="24" />
        <Setter Property="Margin" Value="8" />
    </Style>

    <Style x:Key="SvgImageBack"
           TargetType="{x:Type svg:SvgCachedImage}"
           BasedOn="{StaticResource SvgImage}">
        <Setter Property="WidthRequest" Value="26" />
        <Setter Property="HeightRequest" Value="26" />
        <Setter Property="Source" Value="arrow_left_solid.svg" />
    </Style>

    <Style x:Key="ExpanderCheck"
           TargetType="{x:Type controls:ExpanderCheck}">
        <Setter Property="Header">
            <Setter.Value>
                <StackLayout Style="{StaticResource StackLayoutText}">
                    <svg:SvgCachedImage Style="{StaticResource SvgImage}">
                        <svg:SvgCachedImage.Triggers>
                            <DataTrigger TargetType="{x:Type svg:SvgCachedImage}"
                                         Binding="{Binding Source={RelativeSource AncestorType={x:Type xct:Expander}}, Path=IsExpanded}"
                                         Value="True">
                                <Setter Property="Source"
                                        Value="chevron_down_solid.svg" />
                            </DataTrigger>
                            <DataTrigger TargetType="{x:Type svg:SvgCachedImage}"
                                         Binding="{Binding Source={RelativeSource AncestorType={x:Type xct:Expander}}, Path=IsExpanded}"
                                         Value="False">
                                <Setter Property="Source"
                                        Value="chevron_right_solid.svg" />
                            </DataTrigger>
                        </svg:SvgCachedImage.Triggers>
                    </svg:SvgCachedImage>

                    <Label Text="{Binding Source={RelativeSource AncestorType={x:Type controls:ExpanderCheck}}, Path=HeaderText}"
                           Style="{StaticResource LabelTitle}" />
                </StackLayout>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>